# LinuxCNC config for PrintNC on Flexi-HAL
# Default stepper/servo microstepping = 2000 steps / rev for X and Y.
# Edit axis min/max limits to suit work area
# Velocities in here in units per second, not per minute. 

[EMC]
MACHINE = PrintNC Mini
DEBUG = 0
VERSION = 1.1

[DISPLAY]
DISPLAY = qtvcp -f qtdragon_hd
PROGRAM_PREFIX = ~/linuxcnc/configs/pnc-mini-qtdragon/programs
PREFERENCE_FILE_PATH = ~/linuxcnc/configs/pnc-mini-qtdragon/qtdragon.pref
NGCGUI_SUBFILE_PATH = ~/linuxcnc/ngcgui_lib
EDITOR = geany
POSITION_OFFSET = RELATIVE
POSITION_FEEDBACK = ACTUAL
ARCDIVISION = 64
GRIDS = 10mm 20mm 50mm 100mm
MAX_FEED_OVERRIDE = 2.0
MIN_SPINDLE_0_OVERRIDE = 0.5
MAX_SPINDLE_0_OVERRIDE = 2.0
DEFAULT_SPINDLE_0_SPEED = 6000
MIN_SPINDLE_0_SPEED = 6000
MAX_SPINDLE_0_SPEED = 24000
MAX_SPINDLE_POWER = 2400
DEFAULT_LINEAR_VELOCITY = 84
MIN_LINEAR_VELOCITY = 0
MAX_LINEAR_VELOCITY = 250.00
DEFAULT_ANGULAR_VELOCITY = 36.00
MIN_ANGULAR_VELOCITY = 0
MAX_ANGULAR_VELOCITY = 45.00
INTRO_GRAPHIC = linuxcnc.gif
INTRO_TIME = 10
INCREMENTS = 100mm 10mm 1mm 0.1mm .01mm
#Pre selected NGCGUI programs tabs, specify filenames only, files must be in the NGCGUI_SUBFILE_PATH
NGCGUI_SUBFILE = slot.ngc
NGCGUI_SUBFILE = qpocket.ngc

[PROBE]
#USE_PROBE = versaprobe
USE_PROBE = basicprobe

[KINS]
JOINTS = 4
KINEMATICS = trivkins coordinates=XYZY kinstype=BOTH

[FILTER]
PROGRAM_EXTENSION = .ngc,.nc,.tap G-Code file (*.ngc,*.nc,*.tap)
PROGRAM_EXTENSION = .py Python Script
py = python

[TASK]
TASK = milltask
CYCLE_TIME = 0.010

[MDI_COMMAND_LIST]
# Macro buttons, up to 10 available. 
# Commands separated by ;, display text after ,
MDI_COMMAND = M610,6m\nWarmup
MDI_COMMAND = M611,20m\nWarmup
MDI_COMMAND = G53 G0 Z0;G53 G0 X0 Y354,Go\nHome

[RS274NGC]
PARAMETER_FILE = linuxcnc.var
RS274NGC_STARTUP_CODE = F10 G21 G17 G40 G49 G54 G64 P0.001 G80 G90 G91.1 G92.1 G94 G97 G98
FEATURES = 30
SUBROUTINE_PATH = ~/linuxcnc/configs/pnc-mini-qtdragon/subroutines:~/linuxcnc/ngcgui_lib:~/linuxcnc/ngcgui_lib/utilitysubs
REMAP=M6   modalgroup=6 ngc=dc-tool-change
REMAP=M600 modalgroup=6 ngc=dc-tool-job-begin
REMAP=M610 modalgroup=7 ngc=9m-spindle-warmup
REMAP=M611 modalgroup=7 ngc=20m-spindle-warmup
# on abort, this ngc file is called. required for basic/versa probe routines.
ON_ABORT_COMMAND=O <on_abort> call



[EMCMOT]
EMCMOT = motmod
COMM_TIMEOUT = 1.0
COMM_WAIT = 0.010
BASE_PERIOD = 0
SERVO_PERIOD = 1000000
#SERVO_PERIOD = 500000

[HAL]
TWOPASS = on
HALFILE = pnc-mini-qtdragon.hal
POSTGUI_HALFILE = postgui_call_list.hal
HALUI = halui
HALUI = halui

[TRAJ]
COORDINATES =  XYZY 
LINEAR_UNITS = mm
ANGULAR_UNITS = degree
CYCLE_TIME = 0.010
DEFAULT_LINEAR_VELOCITY = 160.00
MAX_LINEAR_VELOCITY = 250.00
NO_FORCE_HOMING = 1 
SPINDLES = 1

[EMCIO]
EMCIO = io
CYCLE_TIME = 0.100
TOOL_TABLE = tool.tbl
TOOL_CHANGE_AT_G30 = 0

[MACROS]
MACRO = init_probe



[TOOLSENSOR]
# Absolute coordinates of the toolsetter pad
# Not active? Set i subroutine
X = 300
Y = 344
# Absolute Z start search coordinates, adjust to match the longest tool
Z = -40
# Maximum search distance and direction (sign), adjust to match the difference between the longest and shortest tools
MAXPROBE = -25

[CHANGE_POSITION]
# Absolute coordinates of the tool change point
X = 0
Y = 0
Z = 0
# Absolute Z height to safely travel to toolsetter
TRAVELZ = 0.0


[TOUCHPLATE]
# Touchplate dimensions
OFFSETX = 3.306
OFFSETY = 3.767
OFFSETZ = 6.172

################################################################################
# X ############################################################################
################################################################################
[AXIS_X]
MAX_VELOCITY = 200
MAX_ACCELERATION = 750.0
MIN_LIMIT = -0.1
MAX_LIMIT = 336.1

[JOINT_0]
TYPE = LINEAR
MIN_LIMIT = -0.1
MAX_LIMIT = 336.1
MAX_VELOCITY = 200
MAX_ACCELERATION = 750.0
STEPGEN_MAXACCEL = 1200.0

# Movement #####################################################################
# How many steps per unit.
# ballscrew is 10mm/rev
# Stepper is 8k pulses/rev
# So for 800 pulses we'll move 1 mm
SCALE = 160

#HOME_OFFSET = 0
# We'll set the x-coord to -5 when we hit the home switch. Then machine 0 
# (and soft limit) is 1mm from the sensor trigger.
HOME = 50
HOME_OFFSET = -1
HOME_SEARCH_VEL = 20
HOME_LATCH_VEL = 1
HOME_FINAL_VEL = 20
HOME_USE_INDEX = NO
HOME_SEQUENCE = -3
HOME_IGNORE_LIMITS = YES

# To not do a homing sequence and allowing us to set home manually:
#HOME_SEARCH_VEL = 0
#HOME_LATCH_VEL = 0
#HOME_USE_INDEX = NO
#HOME_OFFSET = 0
#HOME_SEQUENCE = 0

# PID ##########################################################################
# These are used by Remora.
# LinuxCNC -> Remora is a software servo loop.
# If this is too low you'll see overshoot.
P_GAIN = 300
# If this is too high you'll see hunting when motors should be still.
FF1_GAIN = 0.6
# 0 is actually the distance for 1 step (in remora) in our case 1/800 mm.
# How close is close enough to consider the motor in position
# Set here to two steps.
DEADBAND = 0.00250
FERROR = 1
MIN_FERROR = 0.25

################################################################################
# Y ############################################################################
################################################################################
[AXIS_Y]
MAX_VELOCITY = 200
MAX_ACCELERATION = 750.0
MIN_LIMIT = -0.1
# From before putting margins on limts:
# MAX_LIMIT = 442.1
MAX_LIMIT = 354.1

# Y-Left
[JOINT_1]
TYPE = LINEAR
MIN_LIMIT = -0.1
# From before putting margins on limts:
# MAX_LIMIT = 442.1
MAX_LIMIT = 354.1
MAX_VELOCITY = 200
MAX_ACCELERATION = 750.0
STEPGEN_MAXACCEL = 1200.0
# Movement #####################################################################
# How many steps per unit.
# ballscrew is 10mm/rev
# Stepper is 8k pulses/rev
# So for 800 pulses we'll move 1 mm
SCALE = -160

# Put 1 mm between max and home so we go to switch position at the physical
# limit, set home offset to 1mm above max, and then go to max. This gives us a
# clearance from switches.
# If we had no margins, Y could move between 0 and 442.
# By setting HOME_OFFSET to 440, and home 439, we create 1mm clearance at both
# min and max.
#
# Extractor: the extractor redusces travel to the bottom of Y by 85 mm
# So MAX_LIMIT, HOME and HOME_OFFSET ahve been adjusted accordingly.
#
# From before putting margins on limts:
# HOME_OFFSET = 442
# HOME = 442
HOME_OFFSET = 355
HOME = 354
HOME_SEARCH_VEL = -20
HOME_LATCH_VEL = -1
HOME_FINAL_VEL = -10
HOME_USE_INDEX = NO
HOME_SEQUENCE = -2
HOME_IGNORE_LIMITS = YES

# To not do a homing sequence and allowing us to set home manually:
#HOME_SEARCH_VEL = 0
#HOME_LATCH_VEL = 0
#HOME_USE_INDEX = NO
#HOME_OFFSET = 0
#HOME_SEQUENCE = 0

# PID ##########################################################################
# These are used by Remora.
# LinuxCNC -> Remora is a software servo loop.
# If this is too low you'll see overshoot.
P_GAIN = 300
# If this is too high you'll see hunting when motors should be still.
FF1_GAIN = 0.6
# 0 is actually the distance for 1 step (in remora) in our case 1/800 mm.
# How close is close enough to consider the motor in position
# Set here to two steps.
DEADBAND = 0.00250
FERROR = 1
MIN_FERROR = 0.25

# Y-Right
[JOINT_3]
TYPE = LINEAR
MIN_LIMIT = -0.1
# From before putting margins on limts:
# MAX_LIMIT = 442.1
MAX_LIMIT = 354.1
MAX_VELOCITY = 200
MAX_ACCELERATION = 750.0
STEPGEN_MAXACCEL = 1200.0
# Movement #####################################################################
# How many steps per unit.
# ballscrew is 10mm/rev
# Stepper is 8k pulses/rev
# So for 800 pulses we'll move 1 mm
SCALE = -160

# Put 1 mm between max and home so we go to switch position at the physical
# limit, set home offset to 1mm above max, and then go to max. This gives us a
# clearance from switches.
# From before putting margins on limts:
# HOME_OFFSET = 442
# HOME = 442
HOME_OFFSET = 355
HOME = 354
HOME_SEARCH_VEL = -20
HOME_LATCH_VEL = -1
HOME_FINAL_VEL = -10
HOME_USE_INDEX = NO
HOME_SEQUENCE = -2
HOME_IGNORE_LIMITS = YES

# To not do a homing sequence and allowing us to set home manually:
#HOME_SEARCH_VEL = 0
#HOME_LATCH_VEL = 0
#HOME_USE_INDEX = NO
#HOME_OFFSET = 0
#HOME_SEQUENCE = 0

# PID ##########################################################################
# These are used by Remora.
# LinuxCNC -> Remora is a software servo loop.
# If this is too low you'll see overshoot.
P_GAIN = 300
# If this is too high you'll see hunting when motors should be still.
FF1_GAIN = 0.6
# 0 is actually the distance for 1 step (in remora) in our case 1/800 mm.
# How close is close enough to consider the motor in position
# Set here to two steps.
DEADBAND = 0.00250
FERROR = 1
MIN_FERROR = 0.25

################################################################################
# Z ############################################################################
################################################################################
[AXIS_Z]
MAX_VELOCITY = 100
MAX_ACCELERATION = 500.0
# From before putting margins on limits
#MIN_LIMIT = -115
MIN_LIMIT = -110
MAX_LIMIT = 0.1

[JOINT_2]
TYPE = LINEAR
# From before putting margins on limits
#MIN_LIMIT = -115
MIN_LIMIT = -110
MAX_LIMIT = 0.1
MAX_VELOCITY = 100
#MAX_VELOCITY = 100
# This should be higher than max_accell on the axis above or you'll get
# following errors.
MAX_ACCELERATION = 1000.0
#MAX_ACCELERATION = 500.0
# Should be 25% higher than max accel.
STEPGEN_MAXACCEL = 1200.0
# Movement #####################################################################
# How many steps per unit.
# ballscrew is 4mm/rev
# Stepper is 8k pulses/rev
# So for 200 pulses we'll move 1 mm
SCALE = -400

HOME_OFFSET = 1
HOME = 0
HOME_SEARCH_VEL = -10
HOME_LATCH_VEL = -2
HOME_FINAL_VEL = -1
HOME_USE_INDEX = NO
HOME_SEQUENCE = -1
HOME_IGNORE_LIMITS = YES

# To not do a homing sequence and allowing us to set home manually:
#HOME_SEARCH_VEL = 0
#HOME_LATCH_VEL = 0
#HOME_USE_INDEX = NO
#HOME_OFFSET = 0
#HOME_SEQUENCE = 0

# PID ##########################################################################
# These are used by Remora.
# LinuxCNC -> Remora is a software servo loop.
# If this is too low you'll see overshoot.
P_GAIN = 300
# If this is too high you'll see hunting when motors should be still.
FF1_GAIN = 0.6
# 0 is actually the distance for 1 step (in remora) in our case 1/800 mm.
# How close is close enough to consider the motor in position
# Set here to two steps.
DEADBAND = 0.00250
FERROR = 2.5
MIN_FERROR = 0.25
